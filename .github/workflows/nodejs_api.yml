# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: CI/CD Pipeline for NodeJS

on:
  push:
    branches:
      - main
      - dev
      - release/*

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Node.js  # Set default working directory for all steps

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # or your required version

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Run tests (quality checks)
      - name: Run Tests
        run: npm run test

      # Step 6: Security checks (e.g., npm audit)
      - name: Run Security Audit
        run: npm audit
  
  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: Node.js  # Set default working directory for all steps
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-api-server:${{ github.ref_name }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/my-api-server:${{ github.ref_name }}

  deploy-sandbox:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    environment: sandbox  # Define the env for sandbox
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Add Sandbox SSH Key
        run: |
          echo "${{ secrets.SANDBOX_EC2_SSH_KEY }}" | base64 --decode > /tmp/sandbox-ec2-key.pem
          chmod 600 /tmp/sandbox-ec2-key.pem

      - name: Deploy to Sandbox
        env:
          DOCKER_IMAGE: "${{ secrets.DOCKER_USERNAME }}/my-api-server:${{ github.ref_name }}"
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/sandbox-ec2-key.pem ${{ secrets.SANDBOX_EC2_USER }}@${{ secrets.SANDBOX_EC2_HOST }} "
            docker pull $DOCKER_IMAGE && \
            docker stop nodejs-app || true && \
            docker rm nodejs-app || true && \
            docker run -d --name nodejs-app -p 3000:3000 $DOCKER_IMAGE
          "

      - name: Cleanup Sandbox SSH Key
        run: rm /tmp/sandbox-ec2-key.pem